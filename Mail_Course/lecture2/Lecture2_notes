atexit - задает колбек , который вызывется при завершении программы.

exit - эквивалент return из main. корректно завершаются все потоки ввода/вывода
_exit or _Exit - возвращает в ядро, ничем не отличаются. Не гарантируют норм завершения потоков. Не вызывают обр-ки atexit.
То есть exit это не сист вызов. Она делает внутри себя что то и потом вызывает там сист вызов _exit/_Exit.

Способ выделения оп памяти
страница памяти - 4кб - стандарт
malloc - выделить опр кусок памяти. Гарантия не ывпрерывной области памяти (виртуальной), но страницы в разных кусках могут распологаться.
calloc -тоже выделение (хз чем отличается), Но заполняет память нулями.
realloc - реалоцировать кусок памяти, если закончилась нужная память.
free - освободить память
mallock быстрее calloc так как маллок иницализирует виртуальную память, но при этом не обращается к ней. В calloc мы заполняем память нулями => обращение к памяти => работает быстрее.
Оптимизация malloc - если нужно проиницализировать пустой строкой - не надо заполнять всю память нулям а надо проинициализировать только первый байт символом конца строки.

mmap - отображение оп памяти на файл. меняем память - меняется файл. В теории mmap быстрее чем сухое чтение файла, но это не так. Сухое чтение/запись гораздо быстрее!!! Mmap'еные файлы между стеком и хипом.

Все схемы памяти представлены в види вирутальной памяти, в реальной памяти все перемешано.

Как загружается компьютер?
pid0 -планировщик.
pid1 - init процесс. Пораждает остальные процессы, усыновляет процессы - сироты, убивает зоомби, не умирает.
эффективный пользователь - тот пользователь, чьими правами мы обладаем. Реальный пользователь - пользователь, под которым мы залогинились.Сохраненный айдишник - айдишник, который сохраняется, когда мы вызываем exec - вызов дургой программы.

fork - разедлить процесс на 2 части.
vfork - разделить процесс на доп поток (общая память).

wait - ждет завершения дочернего процесса.
После завершения процесса остается запись в таблице процессов. Чтобы это не было, нужно в родителе вызывать wait. (зомби)
context switch - переключение процессора от одного процесса в другой.
times - сколько проработал процесс по настенным часам.
Пользовательское время -время, которое тратится на выполнение текущего процесса. Системное время - это время на системные вызовы и переключения между процессами.

exec - вызывать программу в том же процессе. System - выполнить какую нибудь команду в новом процессе.

Группа процессов - процессы, получающие одни сигналы.
setpgroup - установить группу процессу. Если процесс вызвал exec, ему нельзя установить группу. Лидер группы имеет тот же пид, что пид группы.

Сессия - группа групп. Сессию может создать любой кроме лидера группы.

Сигналы - ассинхронная штука. Откравить сигнал процессу - kill. kill -9 - убить процесс. Отправлять сигналы можно не всегда, зависит от прав.
Правильный способ обработки - sigaction.

Взаимодействие процессов: 
1)pipe - в unix |. Передает данные с одного процесса на другой. В си pipe исп-ется при общении процессов - презентация картинка. 
2)popen/pclose - описание в слайде. Родительский процесс пишет в пайп -> дочерний читает из stdio то, что пишет родитель. 
3)FIFO - сначала открываем на чтение, потом на запись.

Семафоры.
Мьютекс - число - сколько единиц ресурса есть. Когда входим в секцию - размер семафора умеьшается. Если нужно взять ресурс, а там его нет, блокировка процесса.
