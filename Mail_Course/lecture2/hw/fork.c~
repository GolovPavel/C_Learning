#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/sem.h>
#include <linux/types.h>
#include <linux/ipc.h>
#define PROC_COUNT 10

int main(){

    int i;
    int parent_pid = getpid();
    int semid = semget(IPC_PRIVATE, PROC_COUNT, IPC_CREAT);
    union semun arg;

    /* Initialize semophore */
    arg.val = 1;
    semctl(semid, 0, SETVAL, arg);

    arg.val = 0;
    for (i = 1; i < PROC_COUNT; i++) {
        semctl(semid, i, SETVAL, arg);
    }

    /* Fork and print in order */
    for (i = 0; i < PROC_COUNT; i++){
        fork();

        if(getpid() != parent_pid) {
            while(semctl(semid, i, GETVAL) != 1);
            printf("%d\n", i);
            arg.val = 1;
            semctl(semid, ++i, SETVAL, arg);
            break;
        }
    }

    exit(0);
}
